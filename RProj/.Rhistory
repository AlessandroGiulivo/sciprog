devtools::create("mutType"))
library(devtools
devtools::create("mutType")
here::dr_here()
devtools::create("../../mutType")
q()
library(BSgenome.Hsapiens.UCSC.hg38)
Hsapiens
BiocManager::install('BSgenome.Hsapiens.UCSC.hg38')
library(BSgenome.Hsapiens.UCSC.hg38)
Hsapiens
Hsapiens$chr1
?findOverlaps
findOverlaps(muts, refGenome)
#' Giulivo\cr E-Mail: <alessandro.giulivo@@mail.polimi.it>
#'
#' @examples
#'
#' mutType("data/inst/sample.vcf", HSapiens, 3)
#'
#' @export
#' @importFrom VariantAnnotation readVcf
#' @importFrom SummarizedExperiment rowRanges
#' @importFrom IRanges resize
mutType <- function(VCFFile, refGenome, context_length) {
muts <- readVcf(VCFFile)
muts <- rowRanges(muts)
muts <- resize(muts, width = context_length, fix="center")
findOverlaps(muts, refGenome)
return(muts)
}
mutType("mutType/data/inst/sample.vcf", HSapiens, 3)
library(VariantAnnotation)
mutType("mutType/data/inst/sample.vcf", HSapiens, 3)
Hs <- Hsapiens
mutType("mutType/data/inst/sample.vcf", Hs, 3)
#' Giulivo\cr E-Mail: <alessandro.giulivo@@mail.polimi.it>
#'
#' @examples
#'
#' mutType("data/inst/sample.vcf", HSapiens, 3)
#'
#' @export
#' @importFrom VariantAnnotation readVcf
#' @importFrom SummarizedExperiment rowRanges
#' @importFrom IRanges resize
mutType <- function(VCFFile, refGenome, context_length) {
muts <- readVcf(VCFFile)
muts <- rowRanges(muts)
muts <- resize(muts, width = context_length, fix="center")
muts
#findOverlaps(muts, refGenome)
return(muts)
}
mutType("mutType/data/inst/sample.vcf", Hs, 3)
#' Giulivo\cr E-Mail: <alessandro.giulivo@@mail.polimi.it>
#'
#' @examples
#'
#' mutType("data/inst/sample.vcf", HSapiens, 3)
#'
#' @export
#' @importFrom VariantAnnotation readVcf
#' @importFrom SummarizedExperiment rowRanges
#' @importFrom IRanges resize
mutType <- function(VCFFile, refGenome, context_length) {
muts <- readVcf(VCFFile)
muts <- rowRanges(muts)
muts <- resize(muts, width = context_length, fix="center")
for (s in seqnames(muts)) {
chr <- paste0('chr', s)
cat(chr)
}
#findOverlaps(muts, refGenome)
return(muts)
}
mutType("mutType/data/inst/sample.vcf", Hs, 3)
for(s in seqnames(muts)) {
chr <- paste0('chr', s)
cat(chr)
}
#' Giulivo\cr E-Mail: <alessandro.giulivo@@mail.polimi.it>
#'
#' @examples
#'
#' mutType("data/inst/sample.vcf", HSapiens, 3)
#'
#' @export
#' @importFrom VariantAnnotation readVcf
#' @importFrom SummarizedExperiment rowRanges
#' @importFrom IRanges resize
mutType <- function(VCFFile, refGenome, context_length) {
muts <- readVcf(VCFFile)
muts <- rowRanges(muts)
muts <- resize(muts, width = context_length, fix="center")
seqnames(muts)
#for(s in seqnames(muts)) {
#  chr <- paste0('chr', s)
#  cat(chr)
#}
#findOverlaps(muts, refGenome)
return(muts)
}
mutType("mutType/data/inst/sample.vcf", Hs, 3)
#' Giulivo\cr E-Mail: <alessandro.giulivo@@mail.polimi.it>
#'
#' @examples
#'
#' mutType("data/inst/sample.vcf", HSapiens, 3)
#'
#' @export
#' @importFrom VariantAnnotation readVcf
#' @importFrom SummarizedExperiment rowRanges
#' @importFrom IRanges resize
mutType <- function(VCFFile, refGenome, context_length) {
muts <- readVcf(VCFFile)
muts <- rowRanges(muts)
muts <- resize(muts, width = context_length, fix="center")
return(seqnames(muts))
#for(s in seqnames(muts)) {
#  chr <- paste0('chr', s)
#  cat(chr)
#}
#findOverlaps(muts, refGenome)
#return(muts)
}
mutType("mutType/data/inst/sample.vcf", Hs, 3)
#' Giulivo\cr E-Mail: <alessandro.giulivo@@mail.polimi.it>
#'
#' @examples
#'
#' mutType("data/inst/sample.vcf", HSapiens, 3)
#'
#' @export
#' @importFrom VariantAnnotation readVcf
#' @importFrom SummarizedExperiment rowRanges
#' @importFrom IRanges resize
mutType <- function(VCFFile, refGenome, context_length) {
muts <- readVcf(VCFFile)
muts <- rowRanges(muts)
muts <- resize(muts, width = context_length, fix="center")
return(muts@seqnames)
#for(s in seqnames(muts)) {
#  chr <- paste0('chr', s)
#  cat(chr)
#}
#findOverlaps(muts, refGenome)
#return(muts)
}
mutType("mutType/data/inst/sample.vcf", Hs, 3)
#' Giulivo\cr E-Mail: <alessandro.giulivo@@mail.polimi.it>
#'
#' @examples
#'
#' mutType("data/inst/sample.vcf", HSapiens, 3)
#'
#' @export
#' @importFrom VariantAnnotation readVcf
#' @importFrom SummarizedExperiment rowRanges
#' @importFrom IRanges resize
mutType <- function(VCFFile, refGenome, context_length) {
muts <- readVcf(VCFFile)
muts <- rowRanges(muts)
muts <- resize(muts, width = context_length, fix="center")
#for(s in seqnames(muts)) {
#  chr <- paste0('chr', s)
#  cat(chr)
#}
#findOverlaps(muts, refGenome)
return(muts)
}
mutType("mutType/data/inst/sample.vcf", Hs, 3)
muts <- mutType("mutType/data/inst/sample.vcf", Hs, 3)
Hs$paste0('chr', '1')
Hs${paste0('chr', '1')}
Hs["chr1"]
Hs[chr1,]
Hs['chr1',]
Hs@seqinfo
getwd()
library(devtools)
current.node = as.package('mutType')
load_all(current.node$path)
rm(list = c("mutType"))
load_all(current.node$path)
document(current.node)
q()
install.packages('mutType_0.0.1.tar.gz')
library(mutType)
?mutType
?mutTypeTable
library(devtools)
?mutType
?mutType
library(BSgenome.Hsapiens.UCSC.hg19)
Hs <- Hsapiens
Hs
library(BSgenome.Hsapiens.UCSC.hg19)
mutType('../../bcg/omics/chiara/final/data/case1765/case1765.vcf', Hs, 9)
library(BiocCheck)
BiocCheck(mutType)
BiocCheck('mutType'))
BiocCheck('mutType')
q()
